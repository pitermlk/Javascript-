CONCEITO DE NULL E UNDEFINED: 
         - NULL = QUANDO NÃO APONTAMOS PARA NENHUMA REFERENCIA
         - UNDEFINED = QUANDO DECLARAMOS UM OBJETO MAS O MESMO SE ENCONTRA INDEFINIDO 
         - NOT DEFINED = QUANDO NÃO DECLARAMOS UM OBJETO E TENTAMOS ULTILIZAR O MESMO. 

FUNÇÕES
         - EXISTEM FUNÇÕES QUE APENAS RECEBEM OBJETOS
         - EXISTEM FUNÇÕES QUE APENAS RETORNAM OBJETOS 
         - EXISTEM FUNÇÕES QUE RECEBEM OBJETOS E RETORNAM OBJETOS 

VARIAVEIS NIVEL GLOBAIS 

         - QUANDO CRIAMOS UMA VARIAVEL FORA DE UMA FUNÇÃO, ESTAMOS CRIANDO UMA VARIAVEL GLOBAL 
         - VARIAVEIS GLOBAIS SÃO FACEIS DE SEREM SOBRE ESCRITAS POIS O ACESSO A ELA É MENOS RESTRITO.

VARIAVEIS VAR E LET 
         - QUANDO USAMOS UMA VARIAVEL GLOBAL DO TIPO VAR COM O MESMO NOME DE UMA VARIAVEL DE UM BLOCO DO TIPO LET
           A MESMA NÃO SOBRE SOBRESCRITA 

VARIAVEL LET 
        - QUANDO UTILIZAMOS A VARIAVEL LET DENTRO DE UM BLOCO , A MESMA SO FICA VISIVEL NO BLOCO. 


HOSTING 
        - QUANDO ULTILIZAMOS O CONCEITO HOSTING PODEMOS DECLARAR OBJETOS DEPOIS DE UMA CHAMADA, POIS COM ESSE METODO
        O HOSTING CHAMA O OBJETO QUANDO NECESSARIO. 

        - CLASSE = POSSUI METODOS E COM UMA CLASSE PODEMOS INSTANCIA UM OBJETO 
        - METODOS (FUNÇÕES) = DEFINEM O COMPORTAMENTO DO OBJETO 
        - OBJETOS = POSSUI METODOS E ESTADOS 
        - VARIAVEIS = DEFINEM O ESTADO DO OBJETO 
        - ARRAYS = LISTA 
        - JSON = POSSUI VALORES E ATRIBUTOS


INSTANCIAR UM OBJETO:

        - PODEMOS INSTANCIAR UM OBJETO ATRAVEZ DE FUNÇÕES, E CLASSES 

OBJETO ANINHADOS 

        - PODEMOS ACOPLAR OBJETOS DENTRO DE OUTROS OBJETOS FAZENDO ASSIM UM ANINHAMENTO


DESTRUCTURING 
        - PODEMOS ULTILIZAR ESSE CONCEITO PARA RETIRAR ATRIBUTOS DE UM DETERMINADO OBJETO PARA CHAMARMOS O MESMO 
        FORA DO ESCOPO DO OBJETO.

OPERADORES RELACIONAIS
         - NORMAIS 
         - ESTRITOS TEM COMO PRINCIPAL FINALIDADE AUMENTAR A TYPAGEM PARA OBTERMOS UMA COMPARAÇÃO MAIS ESPECIFICA.

WINDOW = É UM OBJETO GLOBAL DO NAVEGADOR.

         - NÃO CONSEGUIMOS ACESSAR OBJETOS ( LET E CONST ) ATRAVEZ DO ATRIBUTO WINDOW.
         - GLOBAL NO NODE É EQUIVALENTE AO WINDOW NO BROWSER. 
         - NODE É MODULARIZAD, CADA ARQUIVO É UM MODULO. 
         - RUNTIME = LOCAL ONDE A APLICAÇÃO ESTA SENDO EXECULTADA. 

FUNÇÕES

         - EXISTEM VARIAS FORMAS DE TRABALHARMOS COM FUNÇÕES. 
         - PODEMOS USAR FUNÇÕES PARA TRATAR CRITERIOS DESEJADOS.


PALAVRA RESERVADA " THIS " EM JAVASCRIPT 

        - THIS PODE VARIAR DE ACORDO COM A FORMA A QUAL CHAMAMOS A FUNÇÃO. 

FUNÇÕES ARROW:
        - USAMOS PARA REDUZIR OS SINTAXE DE UMA FUNÇÃO COMUN. 



THIS = FORMA DE REFERENCIA OBJETO ATUAL DE UMA EXECUÇÃO. 
BIND = BIND ALTERA O CONTEXTO DE DO THIS DE UMA FUNÇÃO. ( DEVEMOS USAR O MESMO NOME OBJETO, ATRIBUTO) PARA ALTERARMOS O 
CONTEXTO.
ARROW = FORMA DE ESCREVER FUNÇÕES DE UMA MANEIRA MAIS COMPACTA. 


THIS JAVASCRIPT = REFERENCIA O OBJETO DE ACORDO COM O CONTEXTO.
        - FUNÇÃO NORMAL: O THIS PODE VARIAR.
        - FUNÇÃO ARROW: THIS TERA SEMPRE UM VALOR DIXO.
        - BIND: PODEMOS ALTERAR O CONTEXTO DO THIS DE UMA FUNCAO.

FUNÇÕES ANONIMAS:

        - PODEMOS ENCONTRAR FUNÇÕES ANONIMAS ENCONTRADAS EM ATRIBUTOS DE OBJETOS. 
        - PODEMOS CONSIDERAR QUE UMA FUNÇÃO DO TIPO ARROW TAMBEM É ANONIMA 

CONCEITO DE CALLBACK:

        É O RETORNO DE UMA FUNÇÃO, DENTRO DE OUTRA FUNÇÃO. 


}) = FUNÇÃO DENTRO DE UM PARAMETRO 
         
FUNÇÃO = CLASSE 

FUNÇÃO CONSTRUTORA = É UMA FUNÇÃO QUE CONSTROI O OBJETO QUANDO INSTANCIADO. 

CONTEXTO LEXICO = É A HERARQUIA A QUAL A LINGUAGEM POSSUI COM RELAÇÃO AS CHAMADAS / EXECUÇÕES REALIZADAS

FUNÇÃO FACTORY = É UMA FUNÇÃO CUJO A MESMA RETORNA UM OBJETO. 

IIFE = FUNÇÃO QUE INVOCADA IMEDIATAMENTE QUANDO DECLARADA. 

CALL E APLY = SÃO FORMAS DE CHAMAR UMA FUNÇÃO. A FORMAS DE DECLARAR OS PARAMETROS DE AMBAS SÃO DIFERENTES.

EM UM OBJETO PODEMOS TER = OUTROS OBJETOS, ATRIBUTOS, FUNÇÕES, OBJETOS ANINHADOS. 
